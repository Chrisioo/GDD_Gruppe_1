pico-8 cartridge // http://www.pico-8.com
version 1
__lua__

player = {
    x = 64, 
    y = 64, 
    sprite = 1,
    speed = 1}

enemy = {
    x = 32,
    y = 32,
    sprite = 2,
    speed = 0.5}

game_over = false

function _draw()
    cls(11)
    spr(player.sprite, player.x, player.y)
    spr(enemy.sprite, enemy.x, enemy.y)

    if game_over then 
        print("game over!", 32, 60, 1)
    end
end



function _init()

end

function _update60() 
    if not game_over then
        if btn(0) then player.x = player.x - player.speed end
        if btn(1) then player.x = player.x + player.speed end
        if btn(2) then player.y = player.y - player.speed end
        if btn(3) then player.y = player.y + player.speed end

        --_enemy_random_movement()
        _enemy_follow_player()

        if (player.x < 0 or player.x > 127) then
            player.x = (player.x + 127) % 128
        end
        if (player.y < 0 or player.y > 127) then
            player.y = (player.y + 127) % 128
        end
    end

    if _enemy_collision(player.x, enemy.x, player.y, enemy.y) then
        game_over = true
    end
end

function _enemy_collision(x1, x2, y1, y2)
    return abs(x1 - x2) < 8 and abs(y1 - y2) < 8
end

function _obstacle_collision(x1, x2, y1, y2)
    return abs(x1 - x2) < 8 and abs(y1 - y2) < 8
end

--function _enemy_random_movement()
--    enemy.x = enemy.x + (rnd(3) - 1) * enemy.speed
--    enemy.y = enemy.y + (rnd(3) - 1) * enemy.speed
--    if (enemy.x < 0 or enemy.x > 127) then
--        enemy.x = (enemy.x + 127) % 128
--    end
--    if (enemy.y < 0 or enemy.y > 127) then
--        enemy.y = (enemy.y + 127) % 128
--    end
--end

function _enemy_follow_player()
    local dx = player.x - enemy.x
    local dy = player.y - enemy.y
    local dist = sqrt(dx^2 + dy^2)
    enemy.x = enemy.x + (dx / dist) * enemy.speed * 1.5
    enemy.y = enemy.y + (dy / dist) * enemy.speed * 1.5
end

__gfx__
00000000000000000000000055555555000000550000000000050000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00999999055555555000000550000000000055000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00999999055000000000000550000000000005000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00999999055000000000000550000000055005000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00999999055000000000000550000000000555555000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00999999055000000000000550000000000005000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00999999055000000555555550000000000005000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000055000000555555550000000000005000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
